let pi = 3.141592654;;
let e = 2.718281828;;

let fact = 
	fun e (n : int) : int =>
		if n = 1 then 1
		else n * e (n - 1)
	end;;

let sqr =
	fun sqr (n : int) : int =>
		n * n
	end;;

let sqrf =
	fun sqrfs(n : float) : float =>
		n * n
	end;;

let abs =
	fun abs(n : int) : int => 
		if n < 0 then 0-n else n
	end;;

let absf =
	fun absf (n : float) : float =>
		if n < 0.0 then 0.0 - n else n
	end;;

let max =
	fun f (a : int) : int -> int =>
		fun g (b : int) : int =>
			if a < b then b else a
		end
	end;;

let maxf =
	fun f (a : float) : float -> float =>
		fun g (b : float) : float =>
			if a < b then b else a
		end
	end;;

let fact_tr =
	fun f (n : int) : int =>
		let run = fun loop (n : int) : int -> int =>
			fun h (acc : int) : int =>
				if n = 1 then acc
				else loop (n - 1) (n * acc)
			end
		end
			in
		run n 1
	end;;

let pow =
	fun f (n : int) : float -> float =>
		fun g (val : float) : float =>
			if n = 0 then 1.0
			else val * f (n - 1) val
		end
	end;;

let exp =
	(* stupid solution *)
	fun _ (x : float) : float =>
		let item = 
				fun _ (x : float) : int -> float =>
					fun _ (n : int) : float =>
						pow n x / toFloat (fact n)
					end
				end
			in
		let sum = 
				fun loop (iter : int) : float -> float =>
					fun _ (sum : float) : float =>
						(* fact 12 < Int32.Max *)
						if 12 < iter then sum
						else loop (iter + 1) (sum + item x iter)
					end
				end
			in
		sum 1 1.0
	end;;
(*

let test =
	let a = 10 in
	let b = 20 + a in
	let c = a * b in
	let d = 12 in
	c - d;;

let testSuccess = test = 288;;

*)